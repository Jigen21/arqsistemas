20/10/17

		Arquitectura sistemas operativos

hacer fork al repositorio de la materia

la finalidad de github es trabajar con distintas personas,en distintas localidades
del mundo,para tener un control del software.

 1ero  -> Fork  ->(para hacer la copia de un repositorio,ya que siempre se van haciendo
	           cambios o mejoras,vamos a tener la instantanea de la fecha en la que
		   hicimos el fork,


 2do --> Grupo -> (Cuando somos un grupo de desarrolladores y estamos trabajando en comun,
 	 uno que es dueÃ±o del repositorio y los otros son los integrantes que tienen
	 permiso de ese grupo,pero solo tienen los de ellos)(en este caso vamos a tener
	 una ingenieria)

Practica de github

	en el repositorio de octavio,ir a estilos,y apretar fork.
	despues del fork de estilo,hacemos un pull request en nuestro repositorio,
	switch to base,y le damos a los botones verdes(new pull request,create pull request,
	merge,accept,confirm)
	
	aprender merge,branch,pull request.

Protocolo
	
	poder comunicar de un lugar a otro,serie de normas a respetar
	para poder transferir informacion de un lugar a otro,tengo que saber lo que
	estoy recibiendo(escuchando);los problemas ocurren cuando las falencias permiten
	que cualquiera haga cualquier cosa,para esas situaciones exisita (TelNet) ->
	protocolo de red.la posibilidad de acceder a una consola de un usuario sobre una maquina
	habia que tener un control de verificacion para recibir los paquetes,
	otra forma eran las bbs
	telnet bbs,era lo predecesor a internet,teniamos que saber donde estaba
	esto era un protocolo,ya que transmitia datos,pero se podia entrar a la maquina
	solo con el puerto web,ya que no habia medidas de seguridad,lo de telnet no
	funcionaba,ya que cualquiera podia entrar,entonces encriptaron los datos,ya que
	cuando pasa de un hardware a otro tiene que tener datos encriptados,saber a donde va,
	cuando llega a destino tiene que tener la clave para desencriptarlo,para poder recibirlo
	con toda la informacion,de forma segura y que nadie pueda entrar en todas las
	capas(recortar la metafora de los sobres)

	el protocolo de internet es tcp/ip

	"w3c",va a ser nuestro regulador para los proximos cuatrimestres

	el apunte habla del modelo OSI.es un modelo de interconexiones,nosotros
	nos vamos a basar en la ultima capa,la cual es el nivel de validacion
	los protocolos se pueden usar sin necesidad de entenderlos,pero es mejor
	saber como funcionan,en w3c,tenemos la opcion de verificar nuestro sitio web
	para encontrar los errores que tiene(validator)
	nuestra bibliografia oficial va a ser w3cschool,la escuela que toma estos datos.
	los errores no significa que no ande,sino que no respetamos las cosas como w3c

	w3c validator  ->  la pagina que yo quiero

	vamos a ver los protocolos que estan en la capa de la aplicacion,pueden estar
	corriendo sobre la misma red y el mismo servidor,por ejemplo,contratamos un servicio
	web,tenemos acceso con un usuario y pw,nos permiste tener acceso a una aplicacion
	que administrar un puerto con una direccion ip en particular,vamos a poder ingresar
	y ponerle los protocolos,con chrome seria http,con filezilla seria con ftp,para 
	nosotros va a ser invisible,ya que el protocolo es una aplicacion,capa de aplicacion
	como se comunican 2 aplicaciones,el unico protocolo que me interesa,es el protocolo
	de aplicacion,para los demas existen los tecnicos,
	
	los protocolos que vamos a ver intervienen mucho en Cliente - Servidor

	el servidor brinda informacion al cliente a traves de peticiones del cliente

			     |
			<---p|--->
		       <     |	  >
		Cliente	     |	   Servidor
		       <     |	  >
			<--i-|--->
			     |


	el concepto de socket,es que mando un mensaje,y se recibe en el celular
	sin tener que apretar nada,ya que el celular esta escuchando al servidor
	el protocolo me permite que exista socker,es algo virtual
	token es una palabra
	


	